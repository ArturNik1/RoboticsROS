INSTALL:
- this assumes you got (1) ubuntu 20, (2) ros noetic and (3) turtlebot PC setup  installations completed AND installed (4) turtlebot3_simulations in your catkin_ws
- place 'models' folder in ~/.gazebo
- place 'py-code' folder in catkin_ws/src
- place our.world in turtlebot3_simulations/turtlebot3_gazebo/worlds and turtlebot3_our_world.launch file in ..._gazebo/launch
(tip: have a look at these files and compare them to the empty.world and turtlebot3_empty_world.launch to understand these files better - they will only work once we have built the environmen)

ENVIRONMENT BUILDING:
- use the gazebo environment builder to create our environment according to the map provided (precision of +- 10cm is acceptable)
terminal: roslaunch turtlebot3_gazebo turtlebot3_empty_world.launch
- wait for gazebo to launch 
- then click on edit>Building Editor and add walls according to the map with measures we provided
- note that the walls overlap and have thickness thus the lengths do not add up - the length given is the segment length (this length is displayed when placing the wall)
- it is not so easy to place the map in the right orientation and position wrt. to the coordiante origin (x,y,z)=(0,0,0) where the robot is located, however you can use the robot position as a reference (like shown in Session-2)
- save the map via file>save  (call it room1)
- place the environment files 'model.config' and 'model.sdf' from ~/building_editor_models/room1 into ~/.gazebo/models/room1

YOUR ENVIRONMENT: instead of loading my room1, change the our.world file to load your map (lines 20-24)

START ENVIRONMENT 
term1: roslaunch turtlebot3_gazebo turtlebot3_our_world.launch

MAP THE ENVIRONMENT:
term2: roslaunch turtlebot3_slam turtlebot3_slam.launch
- (this also starts rviz)

term3: roslaunch turtlebot3_teleop turtlebot3_teleop_key.launch
- use this terminal to drive around until you feel that the map is explored (look at the output in rviz)

term4: rosrun map_server map_saver -f ~/map
- this saves the map to the home folder

- now close term2 and term4

NAVIGATE IN THE ENVIRONMENT:
term5: roslaunch turtlebot3_navigation turtlebot3_navigation.launch map_file:=$HOME/map.yaml

- now use term3 to move the robot around a little bit (turn and back and forth) - look at rviz until the maps overlap
- when the robot found itself (could be true right from the start) close term3

- now everything is ready for the task
